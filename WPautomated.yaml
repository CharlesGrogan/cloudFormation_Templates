Parameters:
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (S,M,L)
  DatabaseName:
    Type: String
    Default: wordpress
    DatabaseUser:
      Type: String
      Default: wordpres
    DatabasePassword:
      Type: String
      Default: wordpress
      NoEcho: true
Mappings:
  RegionMap:
    us-east-1:
        AMI: "ami-1853ac65" # June 2020
    us-west-1:
      AMI: "ami-bf5540df" # June 2020
    eu-west-1:
      AMI: "ami-3bfab942" # June 2020
    ap-southeast-1:
      AMI: "ami-e2adf99e" # June 2020
    ap-southeast-2:
      AMI: "ami-43874721" # June 2020
  InstanceSize:
    SMALL:
      "EC2" : "t2.micro"
      "DB" : "t2.micro"
    MEDIUM:
      "EC2" : "t2.small"
      "DB" : "t2.small"
    LARGE:
      "EC2" : "t2.medium"
      "DB" : "t2.medium"
Resources:
  DB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: 5
      StorageType: gp2
      DBInstanceClass: !FindInMap [InstanceSize, !Ref EnvironmentSize, DB] # Dynamic Mapping + Pseudo Params
      DBName: !Ref DatabaseName
      Engine: MySQL
      MasterUsername: !Ref DatabaseUSer
      MasterUserPassword: !Ref DatabasePassWord
  EC2:
    Type: "AWS::EC2::Instance"
    Properties:
    ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI] # Dynamic Mapping and pseudo params
    InstanceType: !FindInMap [InstanceSize, !Ref environmentSize, EC2]
    KeyName: AdvancedCFN
    UserData":
      "Fn::Base64":
        !Sub |
          #!/bin/bash
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2
          --configsets wordpress --region ${AWS::Region}
          yum -y update
    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT15M
    MetaData:
      AWS::CloudFormation::Init:
        configSets:
          wordpress:
            - "configure_cfn"
            - "install_wordpress"
            - "config_wordpress"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path+resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2
                --configsets wordpress --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owne: root
              group: root
            /var/www/html/index2.html:
              content: "test9"
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRuning: "true"
                files:
                  - "etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_wordpress:
          packages:
            yum:
              httpd: []
              php: []
              mysql: []
              php-mysql: []
          sources:
            /var/www/html: "http://wordpress.org/latest.tar.gz"
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"
        config_wordpress:
          commands:
            01_clone_config:
              cwd: "/var/www/html/wordpress"
              tets: "test ! -e /var/www/html/wordpress/wp-config.php"
              command: "cp wp-config-sample.php wp-config.php"
            02_inject_dbhost:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/localhost/${DB.Endpoint.Address}/g' wp-config.php
            03_inject_dbname:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/database_name_here/${DatabaseUser}/g' wp-config.php
            04_inject_dbuser:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/username_here/${DatabaseUser}/g' wp-config.php
            05_inject_dbpassword:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/password_here/${DatabasePassword}/g' wp-config.php
  S3:
    Type: "AWS:::S3::Bucket"